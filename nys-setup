#!/usr/bin/env php
<?php
/**
 * @author    nystudio107
 * @copyright Copyright (c) 2017 nystudio107
 * @link      https://nystudio107.com/
 * @package   nystudio107/craft
 * @since     1.0.0
 * @license   MIT
 */

use yii\helpers\Console;

const CRAFT_SCRIPTS_SETUP = [
    'srclink'      => 'vendor/nystudio107/craft-scripts/scripts',
    'destlink'     => 'scripts',
    'srcpath'      => 'scripts/craft3-example.env.sh',
    'destpath'     => 'scripts/.env.sh',
    'replacements' => [
        'GLOBAL_DB_TABLE_PREFIX=""' => [
            'substr'  => '""',
            'env'     => 'DB_TABLE_PREFIX',
            'default' => '',
        ],
    ],
];

const CRAFT_MULTI_ENVIRONMENT_SETUP = [
    [
        'srcpath'      => 'vendor/nystudio107/craft3-multi-environment/config/db.php',
        'destpath'     => 'config/db.php',
        'replacements' => [
        ],
    ],
    [
        'srcpath'      => 'vendor/nystudio107/craft3-multi-environment/config/general.php',
        'destpath'     => 'config/general.php',
        'replacements' => [
        ],
    ],
    [
        'srcpath'      => 'vendor/nystudio107/craft3-multi-environment/config/volumes.php',
        'destpath'     => 'config/volumes.php',
        'replacements' => [
        ],
    ],
    [
        'srcpath'      => 'vendor/nystudio107/craft3-multi-environment/web/index.php',
        'destpath'     => 'web/index.php',
        'replacements' => [
        ],
    ],
    [
        'srcpath'      => 'vendor/nystudio107/craft3-multi-environment/craft',
        'destpath'     => 'craft',
        'replacements' => [
        ],
    ],
    [
        'srcpath'      => 'vendor/nystudio107/craft3-multi-environment/example.env.php',
        'destpath'     => '.env.php',
        'replacements' => [
            'REPLACE_ME_CRAFT_ENVIRONMENT' => [
                'substr'  => '',
                'env'     => '',
                'default' => 'local',
            ],
            'REPLACE_ME_DB_DRIVER'         => [
                'substr'  => '',
                'env'     => 'DB_DRIVER',
                'default' => 'mysql',
            ],
            'REPLACE_ME_DB_SERVER'         => [
                'substr'  => '',
                'env'     => 'DB_SERVER',
                'default' => 'localhost',
            ],
            'REPLACE_ME_DB_USER'           => [
                'substr'  => '',
                'env'     => 'DB_USER',
                'default' => 'REPLACE_ME',
            ],
            'REPLACE_ME_DB_PASSWORD'       => [
                'substr'  => '',
                'env'     => 'DB_PASSWORD',
                'default' => 'REPLACE_ME',
            ],
            'REPLACE_ME_DB_DATABASE'       => [
                'substr'  => '',
                'env'     => 'DB_DATABASE',
                'default' => 'REPLACE_ME',
            ],
            'REPLACE_ME_DB_SCHEMA'         => [
                'substr'  => '',
                'env'     => 'DB_SCHEMA',
                'default' => 'public',
            ],
            'REPLACE_ME_DB_TABLE_PREFIX'   => [
                'substr'  => '',
                'env'     => 'DB_TABLE_PREFIX',
                'default' => '',
            ],
            'REPLACE_ME_DB_PORT'           => [
                'substr'  => '',
                'env'     => 'DB_PORT',
                'default' => '3306',
            ],
            'REPLACE_ME_SECURITY_KEY'      => [
                'substr'  => '',
                'env'     => 'SECURITY_KEY',
                'default' => 'REPLACE_ME',
            ],
        ],
    ],
];

// Set path constants
define('CRAFT_BASE_PATH', __DIR__);
define('CRAFT_VENDOR_PATH', CRAFT_BASE_PATH . '/vendor');

// Load Composer's autoloader
require_once CRAFT_VENDOR_PATH . '/autoload.php';

// Load the .env file Craft created
if (file_exists(CRAFT_BASE_PATH . '/.env')) {
    $dotEnv = new Dotenv\Dotenv(CRAFT_BASE_PATH);
    $dotEnv->load();
}

// See if we should just display a welcome message
switch ($argv[1]) {
    case 'welcome':
        welcomeNysCraft();
        break;

    default:
        setupNysCraft();
        break;
}

/**
 * Display a welcome message
 */
function welcomeNysCraft()
{
    Console::output(PHP_EOL . 'After running ./craft setup to set up your Craft install,');
    Console::output('Run ./nys-setup to set up Craft 3 Multi-Environemnt & Craft-Scripts.');
}

/**
 * Set up all the things!
 */
function setupNysCraft()
{
    // Set up Craft-Scripts if the file scripts/.env.sh doesn't exist already
    Console::output(PHP_EOL . 'Setting up Craft-Scripts');
    if (!file_exists('scripts/.env.sh')) {
        // Create the scripts symlink
        $fileInfo = CRAFT_SCRIPTS_SETUP;
        if (createSymLink($fileInfo['srclink'], $fileInfo['destlink'])) {
            // Create the default .env.sh
            if (copyFile($fileInfo['srcpath'], $fileInfo['destpath'])) {
                replaceInFile($fileInfo['destpath'], $fileInfo['replacements']);
            }
        }
    } else {
        Console::output('### scripts/.env.sh file already exists, exiting...');
    }

    // Set up Craft 3 Multi-Environment if the file .env.php doesn't exist already
    Console::output(PHP_EOL . 'Setting up Craft 3 Multi-Environment');
    if (!file_exists('.env.php')) {
        // Create the default Craft config files
        foreach (CRAFT_MULTI_ENVIRONMENT_SETUP as $fileInfo) {
            if (copyFile($fileInfo['srcpath'], $fileInfo['destpath'])) {
                replaceInFile($fileInfo['destpath'], $fileInfo['replacements']);
            }
        }
    } else {
        Console::output('### .env.php file already exists, exiting...');
    }
}

/**
 * Create a symlink from $srcPath to $destPath
 *
 * @param string $srcPath
 * @param string $destPath
 *
 * @return bool
 */
function createSymLink(string $srcPath, string $destPath)
{
    $result = symlink($srcPath, $destPath);
    if ($result) {
        Console::output('- created symlink from ' . $srcPath . ' to ' . $destPath);
    } else {
        Console::output('### error creating symlink from ' . $srcPath . ' to ' . $destPath);
    }

    return $result;
}

/**
 * Copy the $srcPath file to $destPath
 *
 * @param string $srcPath
 * @param string $destPath
 *
 * @return bool
 */
function copyFile(string $srcPath, string $destPath)
{
    $result = copy($srcPath, $destPath);
    if ($result) {
        Console::output('- copied ' . $srcPath . ' to ' . $destPath);
    } else {
        Console::output('### error copying ' . $srcPath . ' to ' . $destPath);
    }

    return $result;
}

/**
 * Replace strings in $filePath and write out the modified file
 *
 * @param string $filePath
 * @param array  $replacements
 */
function replaceInFile(string $filePath, array $replacements)
{
    $fileContents = file_get_contents($filePath);
    foreach ($replacements as $findValue => $params) {
        $replaceValue = empty($params['env']) ? $params['default'] : getenv($params['env']) ?? $params['default'];
        $replaceValue = empty($params['substr']) ? $replaceValue : str_replace($params['substr'], $replaceValue, $findValue);
        $fileContents = str_replace($findValue, $replaceValue, $fileContents);
    }
    // Write the file out
    file_put_contents($filePath, $fileContents);
}